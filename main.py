# main.py
"""–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥—Å—á–µ—Ç–∞ —Ö–ª–µ–±–∞"""

import sys
import os
import threading
import time
from multiprocessing import Process

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))


def run_main_app():
    """–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    from web.main_app import ProductionMonitorApp
    app = ProductionMonitorApp()
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞ http://localhost:5000")
    app.run(host='0.0.0.0', port=5000, debug=False)


def run_training_module():
    """–ó–∞–ø—É—Å–∫ –æ–±—É—á–∞—é—â–µ–≥–æ –º–æ–¥—É–ª—è"""
    from web.training_module_advanced import AdvancedTrainingModule
    module = AdvancedTrainingModule()
    print("üß† –ó–∞–ø—É—Å–∫ –æ–±—É—á–∞—é—â–µ–≥–æ –º–æ–¥—É–ª—è –Ω–∞ http://localhost:5001")
    module.run(host='0.0.0.0', port=5001, debug=False)


def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    try:
        from core.imports import check_critical_imports
        check_critical_imports()
        print("‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–º–ø–æ—Ä—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")

        from core.tpu_manager import TPUManager
        tpu_manager = TPUManager()
        if tpu_manager.is_available():
            device_count = tpu_manager.get_device_count()
            print(f"‚úÖ Coral TPU –¥–æ—Å—Ç—É–ø–µ–Ω: {device_count} —É—Å—Ç—Ä–æ–π—Å—Ç–≤")
        else:
            print("‚ö†Ô∏è  Coral TPU –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω CPU")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π: {e}")
        return False


def create_directories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    directories = [
        'uploads',
        'temp_uploads',
        'training_data',
        'training_data/images',
        'training_data/annotations',
        'config'
    ]

    for directory in directories:
        os.makedirs(directory, exist_ok=True)

    print("üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")


def create_default_config():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    cameras_config = """cameras:
  - oven_id: 1
    camera_ip: "192.168.1.100"
    login: "admin"
    password: "CHANGE_ME"
    oven_name: "–ü–µ—á—å ‚Ññ1"
    workshop_name: "–¶–µ—Ö ‚Ññ1"
    enterprise_name: "–•–ª–µ–±–æ–∑–∞–≤–æ–¥"
    product_type: "bread"

system:
  tpu_devices: 1
  frame_rate: 15
  detection_threshold: 0.5
  tracking_max_distance: 100

data_collection:
  output_dir: "training_data"
  save_interval: 5
  video_duration: 30

classes:
  - name: "bread"
    color: [0, 255, 0]
  - name: "bun" 
    color: [255, 0, 0]
  - name: "loaf"
    color: [0, 0, 255]
  - name: "pastry"
    color: [255, 255, 0]
  - name: "defective_bread"
    color: [0, 128, 255]
"""

    config_path = 'config/cameras.yaml'
    if not os.path.exists(config_path):
        with open(config_path, 'w', encoding='utf-8') as f:
            f.write(cameras_config)
        print("üìù –°–æ–∑–¥–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è cameras.yaml")
        print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –ò–∑–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª–∏ –∫–∞–º–µ—Ä –≤ config/cameras.yaml!")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("ü•ñ –°–ò–°–¢–ï–ú–ê –ü–û–î–°–ß–ï–¢–ê –•–õ–ï–ë–ê")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    if not check_requirements():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É")
        sys.exit(1)

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    create_directories()
    create_default_config()

    print("\nüîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É...")
    time.sleep(1)

    try:
        # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        print("\nüöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤...")

        # –ü—Ä–æ—Ü–µ—Å—Å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        main_process = Process(target=run_main_app)
        main_process.start()

        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –≤—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
        time.sleep(2)

        # –ü—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–∞—é—â–µ–≥–æ –º–æ–¥—É–ª—è
        training_process = Process(target=run_training_module)
        training_process.start()

        print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!")
        print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:")
        print("   üè† –ì–ª–∞–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å: http://localhost:5000")
        print("   üß† –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏: http://localhost:5001/training")
        print("\n‚å®Ô∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")

        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        try:
            main_process.join()
            training_process.join()
        except KeyboardInterrupt:
            print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
            main_process.terminate()
            training_process.terminate()
            main_process.join()
            training_process.join()
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

        return 0

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return 1


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        exit_code = main()
        sys.exit(exit_code)