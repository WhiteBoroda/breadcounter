from config_loader import ConfigLoader


def main():
    print("ü•ñ –°–ò–°–¢–ï–ú–ê –ü–û–î–°–ß–ï–¢–ê –•–õ–ï–ë–ê - CPU –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï")
    print("=" * 60)
    print("‚ö†Ô∏è  –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ Coral TPU")
    print("üñ•Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è CPU –¥–µ—Ç–µ–∫—Ü–∏—è (–º–µ–¥–ª–µ–Ω–Ω–µ–µ, –Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç)")

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ YAML
        config = ConfigLoader('cameras.yaml')
        cameras = config.get_cameras()

        print(f"\nüìπ –ù–∞–π–¥–µ–Ω–æ {len(cameras)} –∫–∞–º–µ—Ä –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        config.print_config_summary()

        choice = input("–ó–∞–ø—É—Å—Ç–∏—Ç—å CPU —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ? (y/n): ")
        if choice.lower() != 'y':
            return

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
        system = CPUTestSystem()

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–º–µ—Ä—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        connected_cameras = 0
        for camera in cameras:
            if system.add_camera(camera.oven_id, camera.camera_ip, camera.login, camera.password):
                connected_cameras += 1

        if connected_cameras == 0:
            print("‚ùå –ù–∏ –æ–¥–Ω–∞ –∫–∞–º–µ—Ä–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–∏–ª–∞—Å—å")
            return

        print(f"\n‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫–∞–º–µ—Ä: {connected_cameras}/{len(cameras)}")
        print("\nüé¨ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
        print("   –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥")
        print("   –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")

        # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        system.start_testing()

    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª cameras.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    main()
