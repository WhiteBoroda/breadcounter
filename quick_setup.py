# quick_setup.py - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã
import subprocess
import sys
import time
import threading
import os
from pathlib import Path


class QuickSetup:
    """–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥—Å—á–µ—Ç–∞ —Ö–ª–µ–±–∞"""

    def __init__(self):
        self.processes = {}
        self.running = True

    def print_banner(self):
        """–í—ã–≤–æ–¥ –±–∞–Ω–Ω–µ—Ä–∞"""
        print("ü•ñ" + "=" * 58 + "ü•ñ")
        print("ü•ñ            –°–ò–°–¢–ï–ú–ê –ü–û–î–°–ß–ï–¢–ê –•–õ–ï–ë–ê v2.0              ü•ñ")
        print("ü•ñ                –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫                      ü•ñ")
        print("ü•ñ" + "=" * 58 + "ü•ñ")
        print()

    def check_requirements(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"""
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
        python_version = sys.version_info
        if python_version.major != 3 or python_version.minor < 8:
            print(f"‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8+, –Ω–∞–π–¥–µ–Ω {python_version.major}.{python_version.minor}")
            return False
        print(f"‚úÖ Python {python_version.major}.{python_version.minor}.{python_version.micro}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã
        required_files = [
            'cameras.yaml',
            'main_multicamera.py',
#            'quick_test_headless.py',
            'improved_interactive_training_web.py',
            'web_api.py'
        ]

        for file in required_files:
            if not os.path.exists(file):
                print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∞–π–ª: {file}")
                return False
        print("‚úÖ –í—Å–µ –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫–∏
        os.makedirs('uploads', exist_ok=True)
        os.makedirs('training_data/images', exist_ok=True)
        os.makedirs('training_data/annotations', exist_ok=True)
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ –≥–æ—Ç–æ–≤–∞")

        return True

    def show_menu(self):
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        while self.running:
            print("\nüéØ –ú–ï–ù–Æ –ë–´–°–¢–†–û–ì–û –ó–ê–ü–£–°–ö–ê")
            print("=" * 40)
            print("1. üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã (TPU + –∫–∞–º–µ—Ä—ã)")
            print("2. üß† –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±—É—á–µ–Ω–∏—è (–ø–æ—Ä—Ç 5001)")
            print("3. üìä –í–µ–±-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ (–ø–æ—Ä—Ç 5000)")
            print("4. üöÄ –ü–æ–ª–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (–º–Ω–æ–≥–æ–∫–∞–º–µ—Ä–Ω–∞—è)")
            print("5. üé¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–ª—å—à–∏—Ö –≤–∏–¥–µ–æ")
            print("6. üìà –í—Å–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã")
            print("7. üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
            print("0. ‚ùå –í—ã—Ö–æ–¥")
            print("=" * 40)

            try:
                choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (0-7): ").strip()

                if choice == '0':
                    self.shutdown()
                    break
                elif choice == '1':
                    self.run_system_test()
                elif choice == '2':
                    self.run_training_interface()
                elif choice == '3':
                    self.run_monitoring()
                elif choice == '4':
                    self.run_full_system()
                elif choice == '5':
                    self.run_video_processor()
                elif choice == '6':
                    self.run_all_web_interfaces()
                elif choice == '7':
                    self.run_diagnostics()
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –æ–ø—Ü–∏—è")

            except KeyboardInterrupt:
                print("\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
                self.shutdown()
                break

    def run_system_test(self):
        """–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"""
        print("\nüß™ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´")
        print("-" * 30)

        # –¢–µ—Å—Ç TPU
        print("1. –¢–µ—Å—Ç Coral TPU...")
        try:
            result = subprocess.run([sys.executable, 'test_tpu.py'],
                                    capture_output=True, text=True, timeout=60)
            if result.returncode == 0:
                print("‚úÖ TPU —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω")
            else:
                print("‚ö†Ô∏è  TPU —Ç–µ—Å—Ç —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏")
                print(result.stdout[-200:])  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 200 —Å–∏–º–≤–æ–ª–æ–≤
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ TPU —Ç–µ—Å—Ç–∞: {e}")

        # –¢–µ—Å—Ç –∫–∞–º–µ—Ä
        print("\n2. –¢–µ—Å—Ç –∫–∞–º–µ—Ä...")
        try:
            result = subprocess.run([sys.executable, 'quick_test_headless.py'],
                                    capture_output=True, text=True, timeout=120)
            if result.returncode == 0:
                print("‚úÖ –ö–∞–º–µ—Ä—ã –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã")
                # –í—ã–≤–æ–¥–∏–º –∫—Ä–∞—Ç–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                lines = result.stdout.split('\n')
                for line in lines:
                    if '–†–µ–∑—É–ª—å—Ç–∞—Ç:' in line or '–ø–æ–¥–∫–ª—é—á–µ–Ω–æ' in line:
                        print(f"   {line}")
            else:
                print("‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–∞–º–µ—Ä–∞–º–∏")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –∫–∞–º–µ—Ä: {e}")

        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def run_training_interface(self):
        """–ó–∞–ø—É—Å–∫ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ–±—É—á–µ–Ω–∏—è"""
        print("\nüß† –ó–ê–ü–£–°–ö –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°–ê –û–ë–£–ß–ï–ù–ò–Ø")
        print("-" * 40)
        print("üåê URL: http://localhost:5001")
        print("üìÅ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–æ 5GB")
        print("‚ö° –ß–∞–Ω–∫–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞")

        if self._confirm_start():
            self._start_process('training_web',
                                [sys.executable, 'improved_interactive_training_web.py'])

    def run_monitoring(self):
        """–ó–∞–ø—É—Å–∫ –≤–µ–±-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        print("\nüìä –ó–ê–ü–£–°–ö –í–ï–ë-–ú–û–ù–ò–¢–û–†–ò–ù–ì–ê")
        print("-" * 30)
        print("üåê URL: http://localhost:5000")
        print("üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")

        if self._confirm_start():
            self._start_process('monitoring',
                                [sys.executable, 'web_api.py'])

    def run_full_system(self):
        """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –º–Ω–æ–≥–æ–∫–∞–º–µ—Ä–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã"""
        print("\nüöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ô –°–ò–°–¢–ï–ú–´")
        print("-" * 30)
        print("üß† Coral TPU –æ–±—Ä–∞–±–æ—Ç–∫–∞")
        print("üìπ –ú–Ω–æ–≥–æ–∫–∞–º–µ—Ä–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
        print("ü•ñ –£–º–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–∞—Ä—Ç–∏–π")
        print("üìä –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å
        if not os.path.exists('bread_detector_edgetpu.tflite'):
            print("\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            print("   –°–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
            print("   –∏–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –≥–æ—Ç–æ–≤—É—é –º–æ–¥–µ–ª—å")

            if not self._confirm_start():
                return

        if self._confirm_start():
            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É
            self._start_process('main_system',
                                [sys.executable, 'main_multicamera.py', 'cameras.yaml'])

            # –ß–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –∑–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
            time.sleep(5)
            if 'main_system' in self.processes:
                print("üåê –ó–∞–ø—É—Å–∫ –≤–µ–±-–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
                self._start_process('monitoring',
                                    [sys.executable, 'web_api.py'])

    def run_video_processor(self):
        """–ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –±–æ–ª—å—à–∏—Ö –≤–∏–¥–µ–æ"""
        print("\nüé¨ –û–ë–†–ê–ë–û–¢–ö–ê –ë–û–õ–¨–®–ò–• –í–ò–î–ï–û")
        print("-" * 30)

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        video_path = input("–ü—É—Ç—å –∫ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—É (–∏–ª–∏ –ø–∞–ø–∫–µ): ").strip()
        if not video_path:
            print("‚ùå –ü—É—Ç—å –Ω–µ —É–∫–∞–∑–∞–Ω")
            return

        max_frames = input("–ú–∞–∫—Å–∏–º—É–º –∫–∞–¥—Ä–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1000): ").strip()
        max_frames = max_frames if max_frames.isdigit() else "1000"

        strategy = input("–°—Ç—Ä–∞—Ç–µ–≥–∏—è (uniform/smart/quality_based, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é smart): ").strip()
        strategy = strategy if strategy in ['uniform', 'smart', 'quality_based'] else 'smart'

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
        if os.path.isfile(video_path):
            cmd = [sys.executable, 'large_video_processor.py',
                   '--video', video_path, '--max-frames', max_frames, '--strategy', strategy]
        elif os.path.isdir(video_path):
            cmd = [sys.executable, 'large_video_processor.py',
                   '--videos-dir', video_path, '--max-frames', max_frames, '--strategy', strategy]
        else:
            print("‚ùå –£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            return

        print(f"\nüöÄ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
        print(f"   –ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd[2:])}")

        if self._confirm_start():
            self._start_process('video_processor', cmd)

    def run_all_web_interfaces(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤"""
        print("\nüåê –ó–ê–ü–£–°–ö –í–°–ï–• –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°–û–í")
        print("-" * 40)
        print("üß† –û–±—É—á–µ–Ω–∏–µ: http://localhost:5001")
        print("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: http://localhost:5000")

        if self._confirm_start():
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±—É—á–µ–Ω–∏—è
            self._start_process('training_web',
                                [sys.executable, 'improved_interactive_training_web.py'])

            time.sleep(2)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
            self._start_process('monitoring',
                                [sys.executable, 'web_api.py'])

            print("\n‚úÖ –í—Å–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∑–∞–ø—É—â–µ–Ω—ã")

    def run_diagnostics(self):
        """–ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
        print("\nüîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´")
        print("-" * 30)

        # –í–µ—Ä—Å–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫
        print("üìã –í–µ—Ä—Å–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫:")
        try:
            import cv2
            print(f"   OpenCV: {cv2.__version__}")
        except:
            print("   OpenCV: ‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

        try:
            import numpy as np
            print(f"   NumPy: {np.__version__}")
        except:
            print("   NumPy: ‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

        try:
            import flask
            print(f"   Flask: {flask.__version__}")
        except:
            print("   Flask: ‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ TPU
        print("\nüß† Coral TPU:")
        try:
            from pycoral.utils import edgetpu
            devices = edgetpu.list_edge_tpus()
            print(f"   –£—Å—Ç—Ä–æ–π—Å—Ç–≤ –Ω–∞–π–¥–µ–Ω–æ: {len(devices)}")
            for i, device in enumerate(devices):
                print(f"   –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ {i}: {device}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
        print("\nüíæ –î–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ:")
        try:
            import shutil
            total, used, free = shutil.disk_usage('.')
            print(f"   –í—Å–µ–≥–æ: {total // (1024 ** 3)} GB")
            print(f"   –°–≤–æ–±–æ–¥–Ω–æ: {free // (1024 ** 3)} GB")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

    def _confirm_start(self):
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞"""
        choice = input("\n–ó–∞–ø—É—Å—Ç–∏—Ç—å? (y/n): ").strip().lower()
        return choice in ['y', 'yes', '–¥–∞', '–¥']

    def _start_process(self, name, cmd):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
        try:
            print(f"üöÄ –ó–∞–ø—É—Å–∫ {name}...")
            process = subprocess.Popen(cmd, stdout=subprocess.PIPE,
                                       stderr=subprocess.STDOUT, text=True)
            self.processes[name] = process

            # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—ã–≤–æ–¥–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            threading.Thread(target=self._monitor_process,
                             args=(name, process), daemon=True).start()

            print(f"‚úÖ {name} –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏
            self._show_process_menu()

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {name}: {e}")

    def _monitor_process(self, name, process):
        """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤—ã–≤–æ–¥–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
        try:
            for line in process.stdout:
                print(f"[{name}] {line.strip()}")
        except:
            pass

    def _show_process_menu(self):
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏"""
        while self.processes:
            print(f"\nüîß –£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–¶–ï–°–°–ê–ú–ò ({len(self.processes)} –∞–∫—Ç–∏–≤–Ω—ã—Ö)")
            print("-" * 40)

            for i, (name, process) in enumerate(self.processes.items(), 1):
                status = "üü¢ –†–∞–±–æ—Ç–∞–µ—Ç" if process.poll() is None else "üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                print(f"{i}. {name}: {status} (PID: {process.pid})")

            print(f"{len(self.processes) + 1}. üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ")
            print(f"{len(self.processes) + 2}. ‚¨ÖÔ∏è  –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

            try:
                choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()

                if choice.isdigit():
                    choice_num = int(choice)
                    process_names = list(self.processes.keys())

                    if 1 <= choice_num <= len(process_names):
                        # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
                        name = process_names[choice_num - 1]
                        self._stop_process(name)
                    elif choice_num == len(process_names) + 1:
                        # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ
                        self._stop_all_processes()
                        break
                    elif choice_num == len(process_names) + 2:
                        # –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
                        break

            except (ValueError, KeyboardInterrupt):
                break

    def _stop_process(self, name):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞"""
        if name in self.processes:
            process = self.processes[name]
            try:
                process.terminate()
                process.wait(timeout=5)
                print(f"‚úÖ {name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            except subprocess.TimeoutExpired:
                process.kill()
                print(f"üî• {name} –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ {name}: {e}")
            finally:
                del self.processes[name]

    def _stop_all_processes(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"""
        print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
        for name in list(self.processes.keys()):
            self._stop_process(name)
        print("‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

    def shutdown(self):
        """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã"""
        self.running = False
        self._stop_all_processes()
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    setup = QuickSetup()

    try:
        setup.print_banner()

        if not setup.check_requirements():
            print("‚ùå –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
            return

        setup.show_menu()

    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
        setup.shutdown()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        setup.shutdown()


if __name__ == "__main__":
    main()